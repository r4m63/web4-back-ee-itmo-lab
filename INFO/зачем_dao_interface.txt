Интерфейсы для DAO (Data Access Object) не являются обязательными, но они могут быть полезны в некоторых случаях,
особенно в более сложных или масштабируемых приложениях. Рассмотрим, когда и зачем их использовать.

Зачем делать интерфейсы для DAO?
Слабая связь между слоями:

Использование интерфейсов позволяет ослабить зависимость между слоями приложения. Ваша бизнес-логика может работать с
абстракциями, а не с конкретными реализациями. Это повышает гибкость, поскольку вы можете сменить реализацию DAO без
изменения бизнес-логики.
Например, вы можете поменять реализацию DAO с Hibernate на JPA, или вообще заменить её на другую (например, доступ
через REST API), не затрагивая бизнес-логику.
Тестируемость:

Интерфейсы позволяют легко создавать мок-объекты для юнит-тестов. Вы можете создать заглушки или имитации для DAO,
что упростит написание тестов для сервисов, использующих DAO.
Например, для тестирования бизнес-логики, вы можете использовать интерфейс DAO и подменять реальные реализации на моки.
Паттерн "Dependency Injection":

В контексте CDI или Spring, использование интерфейсов позволяет эффективно использовать инъекцию зависимостей,
обеспечивая гибкость и тестируемость. Интерфейсы становятся частью контракта, который вы внедряете в сервисы.
Например, если у вас есть несколько реализаций DAO для разных источников данных (например, одна работающая с
базой данных, другая с кешем), вы можете использовать интерфейсы, чтобы в нужный момент выбрать соответствующую
реализацию.
Упрощение замены реализации:

Интерфейсы упрощают замену реализации DAO. Например, если вы хотите перейти с Hibernate на JPA или наоборот, вам нужно
будет изменить только реализацию, а интерфейс останется тем же.
Это также полезно, если вы хотите поддерживать несколько реализаций для разных окружений (например, для тестов,
разработки и продакшн).
Когда не обязательно использовать интерфейсы для DAO?
Простые приложения:
В маленьких проектах или приложениях с минимальной бизнес-логикой, где вы точно знаете, что не планируете менять
реализацию DAO, интерфейсы могут быть избыточными. В таких случаях достаточно использовать непосредственно
реализации DAO.
Если не требуется гибкость:
Если ваша реализация DAO не будет изменяться, а проект не будет расширяться, то создание интерфейса может добавить
лишнюю сложность, которая не принесет пользы.




В каких случаях вам может понадобиться интерфейс?
Если вы хотите иметь разные реализации DAO: например, одна реализация для работы с базой данных (Hibernate или JPA),
а другая — для кеширования данных в памяти или работы с удаленным API.

Если у вас есть несколько слоев с зависимостями: бизнес-логика, слой сервисов и слой доступа к данным могут быть четко
разделены, и использование интерфейсов позволит вам управлять зависимостями между ними.

Если вы хотите улучшить тестируемость: моки интерфейсов проще создавать для юнит-тестов. Вы можете имитировать работу
DAO в тестах, не полагаясь на реальную базу данных.