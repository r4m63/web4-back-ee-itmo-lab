CREATE TABLE "user"
(
    id            SERIAL PRIMARY KEY,
    username      TEXT,
    login         TEXT,
    password      TEXT,
    creation_time TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE point
(
    id            SERIAL PRIMARY KEY,
    username      TEXT,
    login         TEXT,
    password      TEXT,
    creation_time TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);


INSERT INTO "user" (username, login, password)
VALUES ('ramil', 'rm.tj.777@gmail.com', '210605');

DROP TABLE IF EXISTS "user" CASCADE;
DROP TABLE IF EXISTS point CASCADE;


-- ------------------------------------------------------------


DROP TABLE IF EXISTS users_points CASCADE;
DROP TABLE IF EXISTS users_sessions CASCADE;
DROP TABLE IF EXISTS users_roles CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS users_roles CASCADE;
DROP TYPE IF EXISTS roles_enum CASCADE;



CREATE TABLE roles
(
    id   SERIAL PRIMARY KEY,
    name TEXT UNIQUE
);

CREATE TABLE users
(
    id            SERIAL PRIMARY KEY,
    username      TEXT UNIQUE,
    email         TEXT,
    password_hash TEXT,
    creation_time TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE users_roles
(
    user_id INT REFERENCES users (id),
    role_id INT REFERENCES roles (id),
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE sessions
(
    id            SERIAL PRIMARY KEY,
    user_id       INTEGER REFERENCES users (id),
    created_at    TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    expires_at    TIMESTAMP,
    last_activity TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE points
(
    id      SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users (id),
    x       DOUBLE PRECISION,
    y       DOUBLE PRECISION,
    r       DOUBLE PRECISION,
    result  BOOLEAN
);



